shinyApp(ui = ui, server = server)
server = function(input, output, session){
}
ui = dashboardPage(
header = dashboardHeader(),
sidebar = dashboardSidebar(),
body = dashboardBody()
)
library(shiny)
library(shinydashboard)
library(shinyWidgets)
ui = dashboardPage(
header = dashboardHeader(),
sidebar = dashboardSidebar(),
body = dashboardBody()
)
server = function(input, output, session){
}
shinyApp(ui = ui, server = server)
shinyApp(ui = ui, server = server)
runApp()
shiny::runApp()
shinyApp(ui, server)
runApp()
runApp()
library(shiny)
library(shinydashboard)
server = function(input, output, session){
output$menu <- renderMenu({
sidebarMenu(id = "menu",
menuItem("Startpage", tabName = "startpage", icon = icon('home')),
menuItem("Dashboard", tabName ="dashboard", icon = icon('dashboard')),
menuItem("우울증", tabName="depression", icon = icon("hand-holding-heart")),
menuItem("DBcentor", tabName ="dbcenter", icon = icon('database')),
menuItem("대리기사", tabName ="daeri", icon = icon('car')),
menuItem("라이더스", tabName ="rider", icon = icon('biking')),
menuItem("가사관리사", tabName ="housecare", icon = icon('house-user'))
)
})
}
shinyApp(ui, server)
ui = dashboardPage(
header = dashboardHeader(),
sidebar = dashboardSidebar(
sidebarMenuOutput("menu")
),
body = dashboardBody()
)
ui = dashboardPage(
header = dashboardHeader(),
sidebar = dashboardSidebar(
sidebarMenuOutput("menu")
),
body = dashboardBody()
)
server = function(input, output, session){
output$menu <- renderMenu({
sidebarMenu(id = "menu",
menuItem("Startpage", tabName = "startpage", icon = icon('home')),
menuItem("Dashboard", tabName ="dashboard", icon = icon('dashboard')),
menuItem("우울증", tabName="depression", icon = icon("hand-holding-heart")),
menuItem("DBcentor", tabName ="dbcenter", icon = icon('database')),
menuItem("대리기사", tabName ="daeri", icon = icon('car')),
menuItem("라이더스", tabName ="rider", icon = icon('biking')),
menuItem("가사관리사", tabName ="housecare", icon = icon('house-user'))
)
})
}
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
ui = dashboardPage(
header = dashboardHeader(),
sidebar = dashboardSidebar(
sidebarMenuOutput("menu")
),
body = dashboardBody()
)
server = function(input, output, session){
output$menu <- renderMenu({
sidebarMenu(id = "menu",
menuItem("Startpage", tabName = "startpage", icon = icon('home')),
menuItem("Dashboard", tabName ="dashboard", icon = icon('dashboard')),
menuItem("우울증", tabName="depression", icon = icon("hand-holding-heart")),
menuItem("DBcentor", tabName ="dbcenter", icon = icon('database')),
menuItem("대리기사", tabName ="daeri", icon = icon('car')),
menuItem("라이더스", tabName ="rider", icon = icon('biking')),
menuItem("가사관리사", tabName ="housecare", icon = icon('house-user'))
)
})
}
shinyApp(ui, server)
runApp()
shinyApp(ui, server)
runApp()
shinyApp(ui, server)
library(DBI)
con <- DBI::dbConnect(odbc::odbc(),
Driver   = "PostgreSQL Unicode",
Server   = "34.64.97.196",Database = "gigcdm",
UID = "giguphs",
PWD = "j2data2021",
Port     = 5432)
library(DBI)
con <- DBI::dbConnect(odbc::odbc(), Driver = "PostgreSQL Unicode",
Server = "34.64.97.196", Database = "gigcdm", UID = "giguphs",
PWD = "j2data2021", Port = 5432)
shiny::runApp()
runApp()
con <- DBI::dbConnect(odbc::odbc(),
Driver   = "PostgreSQL Unicode",
Server   = "localhost",Database = "open_cdm",
UID = "dspub",
PWD = "dspub2021",
Port     = 5432)
con <- DBI::dbConnect(odbc::odbc(),
Driver   = "PostgreSQL Unicode",
Server   = "localhost",Database = "ocdm",
UID = "open_cdm",
PWD = "j2data2020",
Port     = 5432)
con <- DBI::dbConnect(odbc::odbc(),
Driver   = "PostgreSQL Unicode",
Server   = "34.64.97.196",Database = "gigcdm",
UID = "giguphs",
PWD = "j2data2021",
Port     = 5432)
users1 = dbGetQuery(con2, "SELECT * from fitbit.snkey")
users1 = dbGetQuery(con, "SELECT * from fitbit.snkey")
View(con)
View(users1)
library(realxl)
library(readxl)
snkey = read_xlsx("db/snkey.xlsx")
View(snkey)
library(readxl)
snkey = read_xlsx("db/snkey.xlsx")
View(snkey)
con <- DBI::dbConnect(odbc::odbc(),
Driver   = "PostgreSQL Unicode",
Server   = "localhost",Database = "ocdm",
UID = "open_cdm",
PWD = "j2data2020",
Port     = 5432)
dbWriteTable(con, SQL("fitbit.snkey"), value = snkey)
con2 <- DBI::dbConnect(odbc::odbc(),
Driver   = "PostgreSQL Unicode",
Server   = "34.64.97.196",Database = "gigcdm",
UID = "giguphs",
PWD = "j2data2021",
Port     = 5432)
cohort_main = dbGetQuery(con2, "SELECT * from fitbit.cohort_main")
View(cohort_main)
# dbWriteTable(con, SQL("fitbit.cohort_main"), value = cohort_main
# dbWriteTable(con, SQL("fitbit.snkey"), value = snkey)
dbWriteTable(con, SQL("fitbit.cohort_main"), value = cohort_main)
# library(readxl)
# snkey = read_xlsx("db/snkey.xlsx")
con <- DBI::dbConnect(odbc::odbc(),
Driver   = "PostgreSQL Unicode",
Server   = "localhost",Database = "ocdm",
UID = "open_cdm",
PWD = "j2data2020",
Port     = 5432)
install.packages("openxlsx")
library("openxlsx")
write.xlsx(cohort_main, sheetName="sheet1", file="cohort_main.xlsx")
users1 = dbGetQuery(con, "SELECT * from fitbit.snkey")
users = users1 %>%
filter(!is.na(access_token)) %>%
filter(!access_token =="")
library(tidyverse)
users = users1 %>%
filter(!is.na(access_token)) %>%
filter(!access_token =="")
View(users)
runApp()
runApp('~/hrfit_prof')
runApp()
runApp()
con2 <- DBI::dbConnect(odbc::odbc(),
Driver   = "PostgreSQL Unicode",
Server   = "34.64.97.196",Database = "gigcdm",
UID = "giguphs",
PWD = "j2data2021",
Port     = 5432)
cohort_dictionary = dbGetQuery(con2, "SELECT * from fitbit.cohort_dictionary")
View(cohort_dictionary)
View(cohort_dictionary)
View(cohort_dictionary1)
# dbWriteTable(con, SQL("fitbit.snkey"), value = snkey)
# dbWriteTable(con, SQL("fitbit.cohort_main"), value = cohort_main)
dbWriteTable(con, SQL("fitbit.cohort_dictionary"), value = cohort_dictionary)
# library(readxl)
# snkey = read_xlsx("db/snkey.xlsx")
con <- DBI::dbConnect(odbc::odbc(),
Driver   = "PostgreSQL Unicode",
Server   = "localhost",Database = "ocdm",
UID = "open_cdm",
PWD = "j2data2020",
Port     = 5432)
cohort_dictionary = dbGetQuery(con, "SELECT * from fitbit.cohort_dictionary")
cohort_dictionary1 <- cohort_dictionary %>%
filter(`변수명` %in% c("b5","b7","d1_1","d1_2","d1_4","d1_6","d5_6"))
cohort_dictionary2 <- cohort_dictionary %>%
filter(`변수명` %in% c("a17_1","a18_1","a18_1_a2","a18_1_b2","a18_1_d2","b2_a1","b2_a2","b4","b6","c1","c6","c8"))
# dbWriteTable(con, SQL("fitbit.snkey"), value = snkey)
# dbWriteTable(con, SQL("fitbit.cohort_main"), value = cohort_main)
# dbWriteTable(con, SQL("fitbit.cohort_dictionary"), value = cohort_dictionary)
write.xlsx(cohort_dictionary, sheetName="sheet1", file = "db/cohort_dictionary.xlsx")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/hrfit_prof')
runApp()
runApp()
cohort_main = dbGetQuery(con, "SELECT * from fitbit.cohort_main")
cohort_dictionary = dbGetQuery(con, "SELECT * from fitbit.cohort_dictionary")
cohort_dictionary1 <- cohort_dictionary %>%
filter(`변수명` %in% c("b5","b7","d1_1","d1_2","d1_4","d1_6","d5_6"))
cohort_dictionary2 <- cohort_dictionary %>%
filter(`변수명` %in% c("a17_1","a18_1","a18_1_a2","a18_1_b2","a18_1_d2","b2_a1","b2_a2","b4","b6","c1","c6","c8"))
source('plotsource/dashboardplot.R')
dashboardplot1
View(dashboardplot1)
runApp()
runApp()
runApp()
shiny::runApp('~/hrfit_prof')
runApp('~/tutorial')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/hrfit_prof')
runApp()
runApp()
runApp()
runApp()
runApp()
